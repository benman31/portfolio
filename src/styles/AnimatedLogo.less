@import './global.less';

#animated-logo {

  @cubeWidth: 8rem;//150px;
  @parentTranslationOffset: 4rem;//80px;
  @edgeThickness: .25rem;//6px;
  @faceTranslationOffset: 4.2rem;//80px; //This should be set to around  1/2 of the cube width + edge thickness give or take a pixel if using rounded corners
  @animationDuration: 10s;
  --velocityX: 1;
  --velocityY: 1;
  --velocityZ: 1;

  display: flex;
  flex-flow: column;
  align-items: center;
  justify-content: center;

  .logo-scene {
    width: @cubeWidth;
    height: @cubeWidth;
    margin-top: 8em;
    margin-bottom: 6em;
    perspective: 400px;
    .parent-transform {
      width: 100%;
      height: 100%;
      position: relative;
      transform-style: preserve-3d;
      transform: translateZ(@parentTranslationOffset);
      transition: transform 3s ease-in-out;
      &.show-front  {transform: rotateY(   0deg) translateZ(@parentTranslationOffset); }
      &.show-right  {transform: rotateY( -90deg) translateZ(@parentTranslationOffset); }
      &.show-back   {transform: rotateY(-180deg) translateZ(@parentTranslationOffset); }
      &.show-left   {transform: rotateY(  90deg) translateZ(@parentTranslationOffset); }
      &.show-top    {transform: rotateX( -90deg) translateZ(@parentTranslationOffset); }
      &.show-bottom {transform: rotateX(  90deg) translateZ(@parentTranslationOffset); }
      .cube {
        width: @cubeWidth;
        height: @cubeWidth;
        position: relative;
        transform-style: preserve-3d;
        transform: translateZ(-@faceTranslationOffset);

        animation: spinning infinite @animationDuration ease-in-out alternate;

        /* &:hover {
          animation-play-state: paused; // Consider using this as a fun way to embed links on each face
        } */

        .cube-face {
          position: absolute;
          width: @cubeWidth;
          height: @cubeWidth;
          border: @edgeThickness solid @greenHighlight;
          border-radius: 3px;
          background: hsla(@darkTealGreen, 0.55);
          line-height: @cubeWidth;
          font-size: calc(@cubeWidth / 3);
          text-align: center;
          color: hsla(@greenHighlight, 1);
          animation: wink infinite @animationDuration ease-in-out;

          &:hover {
            box-shadow: 0px 0px 12px 3px @greenHighlight;
            text-shadow: 0px 0px 6px @greenHighlight;
          }
        
          &.front {
            transform: rotateY(  0deg) translateZ(@faceTranslationOffset);
            &::before {
              content: ';)';
            }
          }
          &.right {
            transform: rotateY( 90deg) translateZ(@faceTranslationOffset);
          }
          &.back {
            transform: rotateY(180deg) translateZ(@faceTranslationOffset);
          
          }
          &.left {
            transform: rotateY(-90deg) translateZ(@faceTranslationOffset);
          }
          &.top {
            transform: rotateX( 90deg) translateZ(@faceTranslationOffset);
          }
          &.bottom {
            transform: rotateX(-90deg) translateZ(@faceTranslationOffset);
          }
        }
      }
    }
  }

  @keyframes spinning {
    0% {
      transform: translateZ(-@faceTranslationOffset) rotate3d(1, 1, 1, 0deg);
    }
    100% {
      transform: translateZ(-@faceTranslationOffset) rotate3d(1, 1, 1, 360deg);
    }
  }

  @keyframes wink {
    0% {
      color: hsla(@greenHighlight, 1);
      content-visibility: visible;
    }
    5% {
      color: hsla(@greenHighlight, 0);
      content-visibility: hidden;
    }
    95% {
      color: hsla(@greenHighlight, 0);
      content-visibility: hidden;
    }
    100% {
      color: hsla(@greenHighlight, 1);
      content-visibility: visible;
    }
  }
}